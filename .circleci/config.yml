# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
orbs:
  aws-ecr: circleci/aws-ecr@6.7.0

version: 2.1
jobs:
  build:
    docker:
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/clojure:lein-2.9.1


    working_directory: ~/crux

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: lein sub install
      - run: lein deps

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

      - run: lein do version, sub test, check

      # one for when we can get CircleCI Clojars deploys working again
      # - run: ./.circleci/bin/deploy_clojars.sh

  deploy:
    docker:
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/clojure:lein-2.9.1

    working_directory: ~/crux
    steps:
        - checkout
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "project.clj" }}
              - v1-dependencies-
        - run: lein sub install
        - run: lein deps

        - save_cache:
            paths:
              - ~/.m2
            key: v1-dependencies-{{ checksum "project.clj" }}

        - run: sh ./crux-bench/bin/download_dataset.sh
        - run: lein sub -s crux-bench uberjar
        - run:
            command: |
              echo 'export BUILD_ARG="--build-arg crux_commit=$CIRCLE_SHA1"' >> $BASH_ENV
              echo 'export BUILD_TAGS="master,commit-$CIRCLE_SHA1"' >> $BASH_ENV

        - setup_remote_docker
        - aws-ecr/build-and-push-image:
              dockerfile: 'Dockerfile'
              extra-build-args: '${BUILD_ARG}'
              path: "crux-bench/"
              repo: 'crux-bench'
              tag: '${BUILD_TAGS}'

workflows:
  version: 2.1
  commit:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
